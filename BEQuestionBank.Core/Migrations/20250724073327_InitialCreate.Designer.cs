// <auto-generated />
using System;
using BEQuestionBank.Core.Configurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BEQuestionBank.Core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250724073327_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BEQuestionBank.Domain.Models.AuditLog", b =>
                {
                    b.Property<long>("MaNhatKy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MaNhatKy"));

                    b.Property<string>("DiaChiIP")
                        .HasColumnType("text");

                    b.Property<string>("GhiChu")
                        .HasColumnType("text");

                    b.Property<string>("GiaTriCu")
                        .HasColumnType("text");

                    b.Property<string>("GiaTriMoi")
                        .HasColumnType("text");

                    b.Property<string>("HanhDong")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaBanGhi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("MaNguoiDung")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("NguoiDungMaNguoiDung")
                        .HasColumnType("uuid");

                    b.Property<string>("TenBang")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TenNguoiDung")
                        .HasColumnType("text");

                    b.Property<DateTime>("ThoiGianThucHien")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserAgent")
                        .HasColumnType("text");

                    b.HasKey("MaNhatKy");

                    b.HasIndex("NguoiDungMaNguoiDung");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.CauHoi", b =>
                {
                    b.Property<string>("MaCauHoi")
                        .HasColumnType("text");

                    b.Property<short>("CapDo")
                        .HasColumnType("smallint");

                    b.Property<string>("CauHoiChaMaCauHoi")
                        .HasColumnType("text");

                    b.Property<float?>("DoPhanCach")
                        .HasColumnType("real");

                    b.Property<bool>("HoanVi")
                        .HasColumnType("boolean");

                    b.Property<bool>("LaCauHoiNhom")
                        .HasColumnType("boolean");

                    b.Property<string>("MaCauHoiCha")
                        .HasColumnType("text");

                    b.Property<string>("MaPhan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaSoCauHoi")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgayCapNhap")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("NguoiDungMaNguoiDung")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uuid");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<string>("PhanMaPhan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SoLanDung")
                        .HasColumnType("integer");

                    b.Property<int>("SoLanDuocThi")
                        .HasColumnType("integer");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("boolean");

                    b.Property<bool>("XoaTam")
                        .HasColumnType("boolean");

                    b.HasKey("MaCauHoi");

                    b.HasIndex("CauHoiChaMaCauHoi");

                    b.HasIndex("NguoiDungMaNguoiDung");

                    b.HasIndex("PhanMaPhan");

                    b.ToTable("CauHois");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.CauTraLoi", b =>
                {
                    b.Property<string>("MaCauTraLoi")
                        .HasColumnType("text");

                    b.Property<string>("CauHoiMaCauHoi")
                        .HasColumnType("text");

                    b.Property<bool>("LaDapAn")
                        .HasColumnType("boolean");

                    b.Property<string>("MaCauHoi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<int>("ThuTu")
                        .HasColumnType("integer");

                    b.HasKey("MaCauTraLoi");

                    b.HasIndex("CauHoiMaCauHoi");

                    b.ToTable("CauTraLois");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.ChiTietDeThi", b =>
                {
                    b.Property<string>("MaDeThi")
                        .HasColumnType("text");

                    b.Property<string>("CauHoiMaCauHoi")
                        .HasColumnType("text");

                    b.Property<string>("DeThiMaDeThi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaCauHoi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaPhan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhanMaPhan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ThuTu")
                        .HasColumnType("integer");

                    b.HasKey("MaDeThi");

                    b.HasIndex("CauHoiMaCauHoi");

                    b.HasIndex("DeThiMaDeThi");

                    b.HasIndex("PhanMaPhan");

                    b.ToTable("ChiTietDeThis");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.DeThi", b =>
                {
                    b.Property<string>("MaDeThi")
                        .HasColumnType("text");

                    b.Property<bool>("DaDuyet")
                        .HasColumnType("boolean");

                    b.Property<string>("MaMonHoc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MonHocMaMonHoc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("NgayCapNhap")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("SoCauHoi")
                        .HasColumnType("integer");

                    b.Property<string>("TenDeThi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("XoaTam")
                        .HasColumnType("boolean");

                    b.HasKey("MaDeThi");

                    b.HasIndex("MonHocMaMonHoc");

                    b.ToTable("DeThis");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.FileDinhKem", b =>
                {
                    b.Property<string>("MaFile")
                        .HasColumnType("text");

                    b.Property<string>("CauHoiMaCauHoi")
                        .HasColumnType("text");

                    b.Property<string>("CauTraLoiMaCauTraLoi")
                        .HasColumnType("text");

                    b.Property<string>("DuongDan")
                        .HasColumnType("text");

                    b.Property<int?>("LoaiFile")
                        .HasColumnType("integer");

                    b.Property<string>("MaCauHoi")
                        .HasColumnType("text");

                    b.Property<string>("MaCauTraLoi")
                        .HasColumnType("text");

                    b.Property<string>("TenFile")
                        .HasColumnType("text");

                    b.HasKey("MaFile");

                    b.HasIndex("CauHoiMaCauHoi");

                    b.HasIndex("CauTraLoiMaCauTraLoi");

                    b.ToTable("FileDinhKems");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.GiangVienMonHoc", b =>
                {
                    b.Property<Guid>("MaNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DenNgay")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GhiChu")
                        .HasColumnType("text");

                    b.Property<string>("MaMonHoc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MonHocMaMonHoc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("NguoiDungMaNguoiDung")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("TuNgay")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("MaNguoiDung");

                    b.HasIndex("MonHocMaMonHoc");

                    b.HasIndex("NguoiDungMaNguoiDung");

                    b.ToTable("GiangVienMonHocs");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.Khoa", b =>
                {
                    b.Property<string>("MaKhoa")
                        .HasColumnType("text");

                    b.Property<DateTime>("NgayCapNhap")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("XoaTam")
                        .HasColumnType("boolean");

                    b.HasKey("MaKhoa");

                    b.ToTable("Khoas");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.MonHoc", b =>
                {
                    b.Property<string>("MaMonHoc")
                        .HasColumnType("text");

                    b.Property<string>("KhoaMaKhoa")
                        .HasColumnType("text");

                    b.Property<string>("MaKhoa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaSoMonHoc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("NgayCapNhap")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SoTinChi")
                        .HasColumnType("integer");

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("XoaTam")
                        .HasColumnType("boolean");

                    b.HasKey("MaMonHoc");

                    b.HasIndex("KhoaMaKhoa");

                    b.ToTable("MonHocs");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.NguoiDung", b =>
                {
                    b.Property<Guid>("MaNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("BiKhoa")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KhoaMaKhoa")
                        .HasColumnType("text");

                    b.Property<string>("MaKhoa")
                        .HasColumnType("text");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("NgayCapNhap")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VaiTro")
                        .HasColumnType("integer");

                    b.Property<bool>("XoaTam")
                        .HasColumnType("boolean");

                    b.HasKey("MaNguoiDung");

                    b.HasIndex("KhoaMaKhoa");

                    b.ToTable("NguoiDungs");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.Phan", b =>
                {
                    b.Property<string>("MaPhan")
                        .HasColumnType("text");

                    b.Property<bool>("LaCauHoiNhom")
                        .HasColumnType("boolean");

                    b.Property<string>("MaMonHoc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MonHocMaMonHoc")
                        .HasColumnType("text");

                    b.Property<DateTime>("NgayCapNhap")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<string>("TenPhan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ThuTu")
                        .HasColumnType("integer");

                    b.Property<bool>("XoaTam")
                        .HasColumnType("boolean");

                    b.HasKey("MaPhan");

                    b.HasIndex("MonHocMaMonHoc");

                    b.ToTable("Phans");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.AuditLog", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungMaNguoiDung");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.CauHoi", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.CauHoi", "CauHoiCha")
                        .WithMany("CauHoiCons")
                        .HasForeignKey("CauHoiChaMaCauHoi");

                    b.HasOne("BEQuestionBank.Domain.Models.NguoiDung", "NguoiDung")
                        .WithMany("CauHois")
                        .HasForeignKey("NguoiDungMaNguoiDung");

                    b.HasOne("BEQuestionBank.Domain.Models.Phan", "Phan")
                        .WithMany()
                        .HasForeignKey("PhanMaPhan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CauHoiCha");

                    b.Navigation("NguoiDung");

                    b.Navigation("Phan");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.CauTraLoi", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.CauHoi", "CauHoi")
                        .WithMany("CauTraLois")
                        .HasForeignKey("CauHoiMaCauHoi");

                    b.Navigation("CauHoi");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.ChiTietDeThi", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.CauHoi", "CauHoi")
                        .WithMany()
                        .HasForeignKey("CauHoiMaCauHoi");

                    b.HasOne("BEQuestionBank.Domain.Models.DeThi", "DeThi")
                        .WithMany("ChiTietDeThis")
                        .HasForeignKey("DeThiMaDeThi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BEQuestionBank.Domain.Models.Phan", "Phan")
                        .WithMany()
                        .HasForeignKey("PhanMaPhan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CauHoi");

                    b.Navigation("DeThi");

                    b.Navigation("Phan");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.DeThi", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.MonHoc", "MonHoc")
                        .WithMany()
                        .HasForeignKey("MonHocMaMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.FileDinhKem", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.CauHoi", "CauHoi")
                        .WithMany("FileDinhKems")
                        .HasForeignKey("CauHoiMaCauHoi");

                    b.HasOne("BEQuestionBank.Domain.Models.CauTraLoi", "CauTraLoi")
                        .WithMany("FileDinhKems")
                        .HasForeignKey("CauTraLoiMaCauTraLoi");

                    b.Navigation("CauHoi");

                    b.Navigation("CauTraLoi");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.GiangVienMonHoc", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.MonHoc", "MonHoc")
                        .WithMany()
                        .HasForeignKey("MonHocMaMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BEQuestionBank.Domain.Models.NguoiDung", "NguoiDung")
                        .WithMany("GiangVienMonHocs")
                        .HasForeignKey("NguoiDungMaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonHoc");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.MonHoc", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.Khoa", "Khoa")
                        .WithMany("DanhSachMonHoc")
                        .HasForeignKey("KhoaMaKhoa");

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.NguoiDung", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.Khoa", "Khoa")
                        .WithMany()
                        .HasForeignKey("KhoaMaKhoa");

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.Phan", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.MonHoc", "MonHoc")
                        .WithMany("DanhSachPhan")
                        .HasForeignKey("MonHocMaMonHoc");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.CauHoi", b =>
                {
                    b.Navigation("CauHoiCons");

                    b.Navigation("CauTraLois");

                    b.Navigation("FileDinhKems");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.CauTraLoi", b =>
                {
                    b.Navigation("FileDinhKems");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.DeThi", b =>
                {
                    b.Navigation("ChiTietDeThis");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.Khoa", b =>
                {
                    b.Navigation("DanhSachMonHoc");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.MonHoc", b =>
                {
                    b.Navigation("DanhSachPhan");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.NguoiDung", b =>
                {
                    b.Navigation("CauHois");

                    b.Navigation("GiangVienMonHocs");
                });
#pragma warning restore 612, 618
        }
    }
}

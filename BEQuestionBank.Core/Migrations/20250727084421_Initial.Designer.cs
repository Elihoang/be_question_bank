// <auto-generated />
using System;
using BEQuestionBank.Core.Configurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BEQuestionBank.Core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250727084421_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BEQuestionBank.Domain.Models.AuditLog", b =>
                {
                    b.Property<long>("MaNhatKy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MaNhatKy"));

                    b.Property<string>("DiaChiIP")
                        .HasColumnType("text");

                    b.Property<string>("GhiChu")
                        .HasColumnType("text");

                    b.Property<string>("GiaTriCu")
                        .HasColumnType("text");

                    b.Property<string>("GiaTriMoi")
                        .HasColumnType("text");

                    b.Property<string>("HanhDong")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaBanGhi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("MaNguoiDung")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("NguoiDungMaNguoiDung")
                        .HasColumnType("uuid");

                    b.Property<string>("TacNhanNguoiDung")
                        .HasColumnType("text");

                    b.Property<string>("TenBang")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TenNguoiDung")
                        .HasColumnType("text");

                    b.Property<DateTime>("ThoiGianThucHien")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("MaNhatKy");

                    b.HasIndex("NguoiDungMaNguoiDung");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.CauHoi", b =>
                {
                    b.Property<Guid>("MaCauHoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<short>("CapDo")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("CauHoiChaMaCauHoi")
                        .HasColumnType("uuid");

                    b.Property<int?>("ChuanDauRa")
                        .HasColumnType("integer");

                    b.Property<float?>("DoPhanCach")
                        .HasColumnType("real")
                        .HasColumnName("DoPhanCachCauHoi");

                    b.Property<bool>("HoanVi")
                        .HasColumnType("boolean");

                    b.Property<string>("MaCauHoiCha")
                        .HasColumnType("text");

                    b.Property<Guid>("MaPhan")
                        .HasColumnType("uuid");

                    b.Property<int>("MaSoCauHoi")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgayCapNhap")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("NguoiDungMaNguoiDung")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uuid");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<Guid>("PhanMaPhan")
                        .HasColumnType("uuid");

                    b.Property<int>("SoCauHoiCon")
                        .HasColumnType("integer");

                    b.Property<int>("SoLanDung")
                        .HasColumnType("integer");

                    b.Property<int>("SoLanDuocThi")
                        .HasColumnType("integer");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("boolean");

                    b.HasKey("MaCauHoi");

                    b.HasIndex("CauHoiChaMaCauHoi");

                    b.HasIndex("NguoiDungMaNguoiDung");

                    b.HasIndex("PhanMaPhan");

                    b.ToTable("CauHoi");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.CauTraLoi", b =>
                {
                    b.Property<Guid>("MaCauTraLoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CauHoiMaCauHoi")
                        .HasColumnType("uuid");

                    b.Property<bool>("LaDapAn")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MaCauHoi")
                        .HasColumnType("uuid");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<int>("ThuTu")
                        .HasColumnType("integer");

                    b.HasKey("MaCauTraLoi");

                    b.HasIndex("CauHoiMaCauHoi");

                    b.ToTable("CauTraLoi");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.ChiTietDeThi", b =>
                {
                    b.Property<Guid>("MaDeThi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CauHoiMaCauHoi")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DeThiMaDeThi")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MaCauHoi")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MaPhan")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PhanMaPhan")
                        .HasColumnType("uuid");

                    b.Property<int?>("ThuTu")
                        .HasColumnType("integer");

                    b.HasKey("MaDeThi");

                    b.HasIndex("CauHoiMaCauHoi");

                    b.HasIndex("DeThiMaDeThi");

                    b.HasIndex("PhanMaPhan");

                    b.ToTable("ChiTietDeThi");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.DeThi", b =>
                {
                    b.Property<Guid>("MaDeThi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("DaDuyet")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MaMonHoc")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MonHocMaMonHoc")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("NgayCapNhap")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("SoCauHoi")
                        .HasColumnType("integer");

                    b.Property<string>("TenDeThi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaDeThi");

                    b.HasIndex("MonHocMaMonHoc");

                    b.ToTable("DeThi");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.File", b =>
                {
                    b.Property<Guid>("MaFile")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CauHoiMaCauHoi")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CauTraLoiMaCauTraLoi")
                        .HasColumnType("uuid");

                    b.Property<int?>("LoaiFile")
                        .HasColumnType("integer");

                    b.Property<Guid?>("MaCauHoi")
                        .HasColumnType("uuid");

                    b.Property<string>("MaCauTraLoi")
                        .HasColumnType("text");

                    b.Property<string>("TenFile")
                        .HasColumnType("text");

                    b.HasKey("MaFile");

                    b.HasIndex("CauHoiMaCauHoi");

                    b.HasIndex("CauTraLoiMaCauTraLoi");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.Khoa", b =>
                {
                    b.Property<Guid>("MaKhoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("NgayCapNhap")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("XoaTam")
                        .HasColumnType("boolean")
                        .HasColumnName("XoaTamKhoa");

                    b.HasKey("MaKhoa");

                    b.ToTable("Khoa");

                    b.HasData(
                        new
                        {
                            MaKhoa = new Guid("86348359-803b-425c-9015-0f33b3d66a63"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(147),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(146),
                            TenKhoa = "Khoa Công nghệ Thông tin",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("46063d4c-4b70-45c5-b303-23265152a2d4"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2389),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2388),
                            TenKhoa = "Khoa Tài chính - Thương mại",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("2938cbeb-53de-4f3b-9197-5c8f422c58e3"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2420),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2419),
                            TenKhoa = "Khoa Kiến trúc - Mỹ thuật",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("13331579-a09e-4e0c-b5e7-fa9d8900f7a7"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2447),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2447),
                            TenKhoa = "Khoa QT Du lịch - Nhà hàng - Khách sạn",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("abec0c99-965c-4ce2-b27d-ce89323bf33e"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2475),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2475),
                            TenKhoa = "Khoa Tiếng Anh",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("c8318452-3049-4bf1-85aa-069e9582d0f5"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2502),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2502),
                            TenKhoa = "Khoa Nhật Bản học",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("f9c44896-4255-4e9e-aea6-5fb957706477"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2528),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2528),
                            TenKhoa = "Khoa Xây dựng",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("e40f9110-2bb6-45b1-ac6a-b3f6e1ad7f94"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2551),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2550),
                            TenKhoa = "Khoa Luật",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("f07f4e2d-afb1-4fa4-94d7-b9cbeef34c30"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2574),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2574),
                            TenKhoa = "Khoa Dược",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("ea2906c8-5258-4d57-a809-cd45c13b407d"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2598),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2597),
                            TenKhoa = "Khoa Hệ thống thông tin quản lý",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("753ab298-018a-4909-85ba-52fc46e0371e"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2621),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2620),
                            TenKhoa = "Khoa Truyền thông - Thiết kế",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("199a0115-e4d5-46ef-82dc-b017d53c807b"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2644),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2643),
                            TenKhoa = "Viện Kỹ thuật HUTECH",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("cac54872-b2dd-41ee-8121-a5ec2fe82b21"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2666),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2666),
                            TenKhoa = "Viện Khoa học ứng dụng HUTECH",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("48241a01-93d8-4571-9d17-94c79adb8f03"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2689),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2689),
                            TenKhoa = "Viện Khoa học Xã hội và Nhân văn",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("53a219ab-ed94-4d87-923a-b0ee267d3cf4"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2846),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2846),
                            TenKhoa = "Viện Đào tạo Quốc tế HUTECH",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("f38d581b-7163-45a0-ab20-10e83a16cd26"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2870),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2870),
                            TenKhoa = "Viện Công nghệ Việt - Hàn",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("91acaf9b-6777-4ca3-86bb-4adf3d7791a2"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2893),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2893),
                            TenKhoa = "Viện Công nghệ Việt - Nhật",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("8bfb986d-9303-42b2-a95a-1e38f5362c45"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2915),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2915),
                            TenKhoa = "Trung tâm Tin học - Ngoại ngữ - Kỹ năng",
                            XoaTam = false
                        },
                        new
                        {
                            MaKhoa = new Guid("fa81d0f0-8b89-46e1-baac-ff79f9f60811"),
                            MoTa = "",
                            NgayCapNhap = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2938),
                            NgayTao = new DateTime(2025, 7, 27, 8, 44, 19, 455, DateTimeKind.Utc).AddTicks(2938),
                            TenKhoa = "TT Giáo dục chính trị - Quốc phòng",
                            XoaTam = false
                        });
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.MonHoc", b =>
                {
                    b.Property<Guid>("MaMonHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("KhoaMaKhoa")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MaKhoa")
                        .HasColumnType("uuid");

                    b.Property<string>("MaSoMonHoc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("NgayCapNhap")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("SoTinChi")
                        .HasColumnType("integer");

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("XoaTam")
                        .HasColumnType("boolean")
                        .HasColumnName("XoaTamMonHoc");

                    b.HasKey("MaMonHoc");

                    b.HasIndex("KhoaMaKhoa");

                    b.HasIndex("MaSoMonHoc")
                        .IsUnique();

                    b.ToTable("MonHoc");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.NguoiDung", b =>
                {
                    b.Property<Guid>("MaNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("BiKhoa")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("KhoaMaKhoa")
                        .HasColumnType("uuid");

                    b.Property<string>("MaKhoa")
                        .HasColumnType("text");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("NgayCapNhap")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VaiTro")
                        .HasColumnType("integer");

                    b.HasKey("MaNguoiDung");

                    b.HasIndex("KhoaMaKhoa");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.Phan", b =>
                {
                    b.Property<Guid>("MaPhan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("LaCauHoiNhom")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MaMonHoc")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MaPhanCha")
                        .HasColumnType("uuid");

                    b.Property<int?>("MaSoPhan")
                        .HasColumnType("integer");

                    b.Property<Guid?>("MonHocMaMonHoc")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("NgayCapNhap")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<int>("SoLuongCauHoi")
                        .HasColumnType("integer");

                    b.Property<string>("TenPhan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ThuTu")
                        .HasColumnType("integer");

                    b.Property<bool?>("XoaTam")
                        .HasColumnType("boolean")
                        .HasColumnName("XoaTamPhan");

                    b.HasKey("MaPhan");

                    b.HasIndex("MonHocMaMonHoc");

                    b.ToTable("Phan");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.YeuCauRutTrich", b =>
                {
                    b.Property<Guid>("MaYeuCau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool?>("DaXuLy")
                        .HasColumnType("boolean");

                    b.Property<string>("GhiChu")
                        .HasColumnType("text");

                    b.Property<Guid>("MaMonHoc")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MaNguoiDung")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("NgayXuLy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("NgayYeuCau")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NoiDungRutTrich")
                        .HasColumnType("text");

                    b.HasKey("MaYeuCau");

                    b.ToTable("YeuCauRutTrich");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.AuditLog", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungMaNguoiDung");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.CauHoi", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.CauHoi", "CauHoiCha")
                        .WithMany("CauHoiCons")
                        .HasForeignKey("CauHoiChaMaCauHoi");

                    b.HasOne("BEQuestionBank.Domain.Models.NguoiDung", "NguoiDung")
                        .WithMany("CauHois")
                        .HasForeignKey("NguoiDungMaNguoiDung");

                    b.HasOne("BEQuestionBank.Domain.Models.Phan", "Phan")
                        .WithMany()
                        .HasForeignKey("PhanMaPhan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CauHoiCha");

                    b.Navigation("NguoiDung");

                    b.Navigation("Phan");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.CauTraLoi", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.CauHoi", "CauHoi")
                        .WithMany("CauTraLois")
                        .HasForeignKey("CauHoiMaCauHoi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CauHoi");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.ChiTietDeThi", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.CauHoi", "CauHoi")
                        .WithMany()
                        .HasForeignKey("CauHoiMaCauHoi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BEQuestionBank.Domain.Models.DeThi", "DeThi")
                        .WithMany("ChiTietDeThis")
                        .HasForeignKey("DeThiMaDeThi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BEQuestionBank.Domain.Models.Phan", "Phan")
                        .WithMany()
                        .HasForeignKey("PhanMaPhan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CauHoi");

                    b.Navigation("DeThi");

                    b.Navigation("Phan");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.DeThi", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.MonHoc", "MonHoc")
                        .WithMany()
                        .HasForeignKey("MonHocMaMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.File", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.CauHoi", "CauHoi")
                        .WithMany("Files")
                        .HasForeignKey("CauHoiMaCauHoi");

                    b.HasOne("BEQuestionBank.Domain.Models.CauTraLoi", "CauTraLoi")
                        .WithMany("FileDinhKems")
                        .HasForeignKey("CauTraLoiMaCauTraLoi");

                    b.Navigation("CauHoi");

                    b.Navigation("CauTraLoi");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.MonHoc", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.Khoa", "Khoa")
                        .WithMany("DanhSachMonHoc")
                        .HasForeignKey("KhoaMaKhoa");

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.NguoiDung", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.Khoa", "Khoa")
                        .WithMany()
                        .HasForeignKey("KhoaMaKhoa");

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.Phan", b =>
                {
                    b.HasOne("BEQuestionBank.Domain.Models.MonHoc", "MonHoc")
                        .WithMany("DanhSachPhan")
                        .HasForeignKey("MonHocMaMonHoc");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.CauHoi", b =>
                {
                    b.Navigation("CauHoiCons");

                    b.Navigation("CauTraLois");

                    b.Navigation("Files");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.CauTraLoi", b =>
                {
                    b.Navigation("FileDinhKems");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.DeThi", b =>
                {
                    b.Navigation("ChiTietDeThis");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.Khoa", b =>
                {
                    b.Navigation("DanhSachMonHoc");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.MonHoc", b =>
                {
                    b.Navigation("DanhSachPhan");
                });

            modelBuilder.Entity("BEQuestionBank.Domain.Models.NguoiDung", b =>
                {
                    b.Navigation("CauHois");
                });
#pragma warning restore 612, 618
        }
    }
}
